<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <!-- OVERLAY -->
    <include name="Furniture_OverlayInfo">

        <control type="scrollbar" id="9601">
            <width>1</width>
            <height>10</height>
            <visible allowhiddenfocus="true">false</visible>
            <onback>50</onback>
            <onleft>50</onleft>
            <onright>50</onright>
            <onclick>50</onclick>
            <ondown>50</ondown>
            <orientation>vertical</orientation>
            <animation effect="fade" condition="true" time="0" start="100" end="0">Conditional</animation>
        </control>

        <control type="group">
            <visible>[System.IdleTime(4) + Skin.HasSetting(furniture.overlayinfo)] | Control.HasFocus(9601)</visible>
            <visible>![Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogPictureInfo.xml) | Window.IsVisible(FileBrowser.xml) | Window.IsVisible(DialogConfirm.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogButtonMenu.xml) | ControlGroup(9000).HasFocus()]</visible>
            <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
            <visible>!Window.IsVisible(script-script.extendedinfo-VideoList.xml) + !Window.IsVisible(script-globalsearch-main.xml) + !Window.IsVisible(script-globalsearch-infodialog.xml) + !Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) + !Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml)</visible>
            <visible>[!IsEmpty(Window(home).Property(Set.Movies.ExtendedPlot)) + [Container.Content(Sets) | substring(ListItem.Path,videodb://movies/sets,left)]] | !IsEmpty(ListItem.Plot) | !IsEmpty(ListItem.Property(Artist_Description)) | !IsEmpty(ListItem.Property(Album_Description)) | !IsEmpty(ListItem.AddonDescription) | !IsEmpty(Window(Home).Property(SkinHelper.ListItem.Plot)) | !IsEmpty(Window(Home).Property(SkinHelper.ListItem.Albums.Formatted)) | !IsEmpty(Window(Home).Property(SkinHelper.ListItem.Tracks.Formatted2)) | Control.HasFocus(9601)</visible>
            <include>Animation_FadeIn</include>
            <control type="image" description="Background">
                <width>100%</width>
                <height>100%</height>
                <texture colordiffuse="Background">common/white.png</texture>
                <animation effect="fade" start="100" end="95" condition="true">Conditional</animation>
            </control>
        </control>

        <control type="group">
            <left>sidepad</left>
            <right>sidepad</right>
            <top>top</top>
            <height>height</height>
            <visible>[System.IdleTime(4) + Skin.HasSetting(furniture.overlayinfo)] | Control.HasFocus(9601)</visible>
            <visible>![Window.IsVisible(script-skinshortcuts.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogPictureInfo.xml) | Window.IsVisible(FileBrowser.xml) | Window.IsVisible(DialogConfirm.xml) | Window.IsVisible(DialogSelect.xml) | Window.IsVisible(DialogContextMenu.xml) | Window.IsVisible(DialogButtonMenu.xml) | ControlGroup(9000).HasFocus()]</visible>
            <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
            <visible>!Window.IsVisible(script-script.extendedinfo-VideoList.xml) + !Window.IsVisible(script-globalsearch-main.xml) + !Window.IsVisible(script-globalsearch-infodialog.xml) + !Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) + !Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml)</visible>
            <visible>[!IsEmpty(Window(home).Property(Set.Movies.ExtendedPlot)) + [Container.Content(Sets) | substring(ListItem.Path,videodb://movies/sets,left)]] | !IsEmpty(ListItem.Plot) | !IsEmpty(ListItem.Property(Artist_Description)) | !IsEmpty(ListItem.Property(Album_Description)) | !IsEmpty(ListItem.AddonDescription) | !IsEmpty(Window(Home).Property(SkinHelper.ListItem.Plot)) | !IsEmpty(Window(Home).Property(SkinHelper.ListItem.Albums.Formatted)) | !IsEmpty(Window(Home).Property(SkinHelper.ListItem.Tracks.Formatted2)) | Control.HasFocus(9601)</visible>
            <include>Animation_SlideIn</include>

            <control type="group">
                <left>40</left>
                <right>40</right>
                <top>60</top>
                <bottom>35</bottom>
                <control type="group">
                    <visible>Container(9602).HasPrevious</visible>
                    <include>Animation_FadeIn</include>
                    <include>Animation_FadeOut</include>
                    <control type="image">
                        <width>16</width>
                        <height>16</height>
                        <texture colordiffuse="ListLabel" flipy="true">common/16-arrow-down.png</texture>
                        <centerleft>50%</centerleft>
                        <top>70</top>
                    </control>
                    <control type="image">
                        <width>16</width>
                        <height>16</height>
                        <texture colordiffuse="ListLabel" flipy="true">common/16-arrow-down.png</texture>
                        <centerleft>50%</centerleft>
                        <top>60</top>
                    </control>
                </control>

                <control type="group">
                    <visible>Container(9602).HasNext</visible>
                    <include>Animation_FadeIn</include>
                    <include>Animation_FadeOut</include>
                    <control type="image">
                        <width>16</width>
                        <height>16</height>
                        <texture colordiffuse="ListLabel" flipy="false">common/16-arrow-down.png</texture>
                        <centerleft>50%</centerleft>
                        <bottom>0</bottom>
                    </control>
                    <control type="image">
                        <width>16</width>
                        <height>16</height>
                        <texture colordiffuse="ListLabel" flipy="false">common/16-arrow-down.png</texture>
                        <centerleft>50%</centerleft>
                        <bottom>10</bottom>
                    </control>
                </control>

                <control type="label">
                    <description>header label</description>
                    <left>bigpad</left>
                    <right>bigpad</right>
                    <font>Font-Header</font>
                    <height>45</height>
                    <label>$VAR[Label_OverlayTitle]</label>
                </control>

                <control type="textbox" id="9602">
                    <description>textarea</description>
                    <left>bigpad</left>
                    <right>bigpad</right>
                    <top>90</top>
                    <bottom>30</bottom>
                    <align>left</align>
                    <font>Font-ListInfo-Big</font>
                    <label>$VAR[Label_OverlayPlot]</label>
                    <pagecontrol>9601</pagecontrol>
                    <autoscroll delay="8000" time="4000" repeat="12000">false</autoscroll>
                </control>
            </control>
        </control>
    </include>

    <include name="Furniture_DialogInfoOverlay">
        <control type="group">
            

            <control type="group">
                <visible>Control.HasFocus(9601)</visible>
                <include>Animation_FadeIn</include>
                <control type="image" description="Background">
                    <width>100%</width>
                    <height>100%</height>
                    <texture colordiffuse="Background">common/white.png</texture>
                    <animation effect="fade" start="100" end="95" condition="true">Conditional</animation>
                </control>
            </control>

            <control type="scrollbar" id="9601">
                <top>100</top>
                <left>-1000</left>
                <bottom>100</bottom>
                <onback>9000</onback>
                <onleft>9000</onleft>
                <onright>9000</onright>
                <onclick>9000</onclick>
                <ondown>9000</ondown>
                <width>8</width>
                <orientation>vertical</orientation>
                <animation effect="fade" condition="true" time="0" start="100" end="0">Conditional</animation>
            </control>

            <control type="group">
                <left>sidepad</left>
                <right>sidepad</right>
                <top>top</top>
                <height>height</height>
                <visible>Control.HasFocus(9601)</visible>
                <include>Animation_SlideIn</include>
                <control type="group">
                    <left>40</left>
                    <right>40</right>
                    <top>60</top>
                    <bottom>35</bottom>
                    <control type="group">
                        <visible>Container(9602).HasPrevious</visible>
                        <include>Animation_FadeIn</include>
                        <include>Animation_FadeOut</include>
                        <control type="image">
                            <width>16</width>
                            <height>16</height>
                            <texture colordiffuse="ListLabel" flipy="true">common/16-arrow-down.png</texture>
                            <centerleft>50%</centerleft>
                            <top>70</top>
                        </control>
                        <control type="image">
                            <width>16</width>
                            <height>16</height>
                            <texture colordiffuse="ListLabel" flipy="true">common/16-arrow-down.png</texture>
                            <centerleft>50%</centerleft>
                            <top>60</top>
                        </control>
                    </control>

                    <control type="group">
                        <visible>Container(9602).HasNext</visible>
                        <include>Animation_FadeIn</include>
                        <include>Animation_FadeOut</include>
                        <control type="image">
                            <width>16</width>
                            <height>16</height>
                            <texture colordiffuse="ListLabel" flipy="false">common/16-arrow-down.png</texture>
                            <centerleft>50%</centerleft>
                            <bottom>0</bottom>
                        </control>
                        <control type="image">
                            <width>16</width>
                            <height>16</height>
                            <texture colordiffuse="ListLabel" flipy="false">common/16-arrow-down.png</texture>
                            <centerleft>50%</centerleft>
                            <bottom>10</bottom>
                        </control>
                    </control>

                    <control type="label">
                        <description>header label</description>
                        <left>bigpad</left>
                        <right>bigpad</right>
                        <font>Font-Header</font>
                        <height>45</height>
                        <label>$VAR[Label_OverlayTitle]</label>
                    </control>

                    <control type="textbox" id="9602">
                        <description>textarea</description>
                        <left>bigpad</left>
                        <right>bigpad</right>
                        <top>90</top>
                        <bottom>30</bottom>
                        <align>left</align>
                        <font>Font-ListInfo-Big</font>
                        <label>$VAR[Label_OverlayPlot]</label>
                        <pagecontrol>9601</pagecontrol>
                        <autoscroll delay="8000" time="4000" repeat="12000">false</autoscroll>
                    </control>
                </control>
            </control>
        </control>

    </include>

    <!-- RSS -->
    <include name="Furniture_RSS">
        <control type="group">
            <visible>!Window.IsVisible(DialogNotification.xml)</visible>
            <visible>!Window.IsVisible(DialogExtendedProgressBar.xml)</visible>
            <animation effect="slide" start="0,64" end="0" time="125">VisibleChange</animation>
            <control type="image">
                <posx>16</posx>
                <posy>48r</posy>
                <width>32</width>
                <height>32</height>
                <texture colordiffuse="LineLabel">$VAR[Image_RSS_Icon]</texture>
                <!-- <visible>Player.HasMedia | [!Player.HasMedia + [system.getbool(lookandfeel.enablerssfeeds) | Window.IsVisible(SettingsCategory.xml)] + [Window.IsVisible(weather) | Window.IsVisible(home)]]</visible> -->
            </control>
            <control type="label">
                <bottom>16</bottom>
                <left>48</left>
                <right>300</right>
                <height>32</height>
                <font>Font-ListInfo-Small-Bold</font>
                <textcolor>LineLabel</textcolor>
                <label>$VAR[Label_RSS,   ,]</label>
                <!-- <visible>Player.HasMedia</visible> -->
                <visible>!Skin.HasSetting(furniture.showflags) | !Skin.HasSetting(furniture.flags.extradetail)</visible>
            </control>
            <control type="label">
                <bottom>16</bottom>
                <left>48</left>
                <right>960</right>
                <height>32</height>
                <font>Font-ListInfo-Small-Bold</font>
                <textcolor>LineLabel</textcolor>
                <label>$VAR[Label_RSS,   ,]</label>
                <!-- <visible>Player.HasMedia</visible> -->
                <visible>Skin.HasSetting(furniture.showflags) + Skin.HasSetting(furniture.flags.extradetail)</visible>
            </control>
        </control>
        <control type="grouplist">
            <visible>Skin.HasSetting(furniture.showflags)</visible>
            <visible>![Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-VideoList.xml)]</visible>
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>
            <bottom>6</bottom>
            <left>800</left>
            <right>bigpad</right>
            <align>right</align>
            <height>64</height>
            <orientation>horizontal</orientation>
            <itemgap>bigpad</itemgap>
            <usecontrolcoords>true</usecontrolcoords>

            <!-- Bluray -->
            <control type="image">
                <width>64</width>
                <height>64</height>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback.png">indicator/bluray.png</texture>
                <visible>[substring(ListItem.FilenameAndPath,bluray) | substring(ListItem.FilenameAndPath,bdrip) | substring(ListItem.FilenameAndPath,bd25) | substring(ListItem.FilenameAndPath,bd50)]</visible>
            </control>

            <!-- HDDVD -->
            <control type="image">
                <width>95</width>
                <height>64</height>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback.png">indicator/hddvd.png</texture>
                <visible>substring(ListItem.FilenameAndPath,hddvd)</visible>
            </control>

            <!-- DVD -->
            <control type="image">
                <width>64</width>
                <height>64</height>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback.png">indicator/dvd.png</texture>
                <visible>substring(ListItem.FilenameAndPath,dvd) + !substring(ListItem.FilenameAndPath,hddvd)</visible>
            </control>

            <!-- TV -->
            <control type="image">
                <width>64</width>
                <centertop>50%</centertop>
                <height>64</height>
                <texture colordiffuse="LineLabel">indicator/tv.png</texture>
                <visible>substring(ListItem.FilenameAndPath,hdtv) | substring(ListItem.FilenameAndPath,dsr) | substring(ListItem.FilenameAndPath,pdtv) | substring(ListItem.FilenameAndPath,satrip) | substring(ListItem.FilenameAndPath,dthrip) | substring(ListItem.FilenameAndPath,dvbrip) | substring(ListItem.FilenameAndPath,tvrip)</visible>
            </control>

            <!-- WEB DL -->
            <control type="image">
                <width>64</width>
                <centertop>50%</centertop>
                <height>64</height>
                <texture colordiffuse="LineLabel">indicator/web-dl.png</texture>
                <visible>substring(ListItem.FilenameAndPath,web-dl) | substring(ListItem.FilenameAndPath,webdl) | substring(ListItem.FilenameAndPath,web-rip) | substring(ListItem.FilenameAndPath,webrip) | substring(ListItem.FilenameAndPath,web dl) | substring(ListItem.FilenameAndPath,web rip)</visible>
            </control>

            <!-- 3d Enabled -->
            <control type="image">
                <width>64</width>
                <height>64</height>
                <aspectratio>keep</aspectratio>
                <visible>ListItem.IsStereoscopic</visible>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback.png">indicator/3D.png</texture>
            </control>

            <!-- IMDB Top 250 -->
            <control type="image">
                <width>64</width>
                <height>64</height>
                <aspectratio>keep</aspectratio>
                <visible>!IsEmpty(ListItem.Top250)</visible>
                <visible>IsEmpty(Window(home).Property(SkinHelper.ListItem.IMDB.Top250))</visible>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback.png">indicator/imdb.png</texture>
            </control>
            <control type="group">
                <width>64</width>
                <height>64</height>
                <visible>!IsEmpty(Window(home).Property(SkinHelper.ListItem.IMDB.Top250))</visible>
                <control type="image">
                    <width>64</width>
                    <height>64</height>
                    <aspectratio>keep</aspectratio>
                    <texture colordiffuse="LineLabel">indicator/imdbtop.png</texture>
                </control>
                <control type="label">
                    <centerbottom>33%</centerbottom>
                    <width>64</width>
                    <height>32</height>
                    <aligny>center</aligny>
                    <align>center</align>
                    <textcolor>LineLabel</textcolor>
                    <font>Font-LineLabel</font>
                    <label>$INFO[Window(home).Property(SkinHelper.ListItem.IMDB.Top250)]</label>
                </control>
            </control>

            <!-- Resolution -->
            <control type="image">
                <width>64</width>
                <height>64</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel" fallback="indicator/resolution/480.png">$INFO[ListItem.VideoResolution,indicator/resolution/,.png]</texture>
                <visible>!IsEmpty(ListItem.VideoResolution)</visible>
            </control>

            <!-- Video Codec -->
            <control type="image">
                <width>64</width>
                <height>64</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel"  fallback="indicator/fallback.png">$INFO[ListItem.VideoCodec,indicator/source/,.png]</texture>
                <visible>!IsEmpty(ListItem.VideoCodec)</visible>
            </control>

            <!-- Audio Channels -->
            <control type="image">
                <width>64</width>
                <height>64</height>
                <aspectratio>keep</aspectratio>
                <visible>!IsEmpty(ListItem.AudioChannels)</visible>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback.png">$INFO[ListItem.AudioChannels,indicator/channels/,.png]</texture>
            </control>

            <!-- Audio Codec -->
            <control type="image">
                <width>64</width>
                <height>64</height>
                <aspectratio>keep</aspectratio>
                <visible>!IsEmpty(ListItem.AudioCodec)</visible>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback.png">$INFO[ListItem.AudioCodec,indicator/audio/,.png]</texture>
            </control>

            

            <!-- MPAA -->
            <control type="group">
                <width>100</width>
                <height>64</height>
                <visible>!IsEmpty(ListItem.MPAA)</visible>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
                <control type="image">
                    <centerleft>50%</centerleft>
                    <top>20</top>
                    <width>90</width>
                    <height>30</height>
                    <texture colordiffuse="LineLabel" border="8">indicator/rating.png</texture>
                </control>
                <control type="label">
                    <centerleft>50%</centerleft>
                    <width>90</width>
                    <height>64</height>
                    <top>2</top>
                    <textcolor>LineLabel</textcolor>
                    <font>Font-LineLabel</font>
                    <aligny>center</aligny>
                    <align>center</align>
                    <label fallback="NR">$VAR[Label_MPAA]</label>
                </control>
            </control>

            <!-- Album Artist -->
            <control type="image">
                <left>-12</left>
                <top>1</top>
                <width>64</width>
                <height>64</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel">indicator/artist.png</texture>
                <visible>!IsEmpty(ListItem.AlbumArtist)</visible>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
                <visible>Container.Content(songs) | Container.Content(albums)</visible>
            </control>
            <control type="label">
                <top>2</top>
                <left>-20</left>
                <height>64</height>
                <width>auto</width>
                <label>$INFO[ListItem.AlbumArtist]  </label>
                <textcolor>LineLabel</textcolor>
                <font>Font-LineLabel</font>
                <aligny>center</aligny>
                <visible>!IsEmpty(ListItem.AlbumArtist)</visible>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
                <visible>Container.Content(songs) | Container.Content(albums)</visible>
            </control>
            <control type="image">
                <left>-12</left>
                <top>1</top>
                <width>64</width>
                <height>64</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel">indicator/album.png</texture>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
                <visible>!IsEmpty(ListItem.AlbumArtist) | !IsEmpty(ListItem.Album)</visible>
                <visible>Container.Content(songs)</visible>
            </control>
            <control type="label">
                <top>2</top>
                <left>-20</left>
                <height>64</height>
                <width>auto</width>
                <label>$INFO[ListItem.Album]  </label>
                <textcolor>LineLabel</textcolor>
                <font>Font-LineLabel</font>
                <aligny>center</aligny>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
                <visible>!IsEmpty(ListItem.AlbumArtist) | !IsEmpty(ListItem.Album)</visible>
                <visible>Container.Content(songs)</visible>
            </control>
            

            <!-- Duration -->
            <control type="image">
                <left>-12</left>
                <top>2</top>
                <width>64</width>
                <height>64</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel">indicator/clock.png</texture>
                <visible>!IsEmpty(ListItem.Duration)</visible>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
            </control>
            <control type="label">
                <top>2</top>
                <left>-24</left>
                <height>64</height>
                <width>88</width>
                <label>$INFO[ListItem.Duration,, $LOCALIZE[31117]]</label>
                <textcolor>LineLabel</textcolor>
                <font>Font-LineLabel</font>
                <aligny>center</aligny>
                <visible>!IsEmpty(ListItem.Duration)</visible>
                <visible>!substring(ListItem.Duration,:)</visible>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
            </control>
            <control type="label">
                <top>2</top>
                <left>-24</left>
                <height>64</height>
                <width>auto</width>
                <label>$INFO[ListItem.Duration]  </label>
                <textcolor>LineLabel</textcolor>
                <font>Font-LineLabel</font>
                <aligny>center</aligny>
                <visible>!IsEmpty(ListItem.Duration)</visible>
                <visible>substring(ListItem.Duration,:)</visible>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
            </control>

            <!-- Year / Premiered -->
            <control type="image">
                <left>-12</left>
                <top>1</top>
                <width>64</width>
                <height>64</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel">indicator/calendar.png</texture>
                <visible>[!IsEmpty(ListItem.Year) + !container.Content(episodes)] | [!IsEmpty(ListItem.Premiered) + Container.Content(episodes)]</visible>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
            </control>
            <control type="label">
                <top>2</top>
                <left>-20</left>
                <height>64</height>
                <width>auto</width>
                <label>$INFO[ListItem.Year]  </label>
                <textcolor>LineLabel</textcolor>
                <font>Font-LineLabel</font>
                <aligny>center</aligny>
                <visible>!IsEmpty(ListItem.Year) + !container.Content(episodes)</visible>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
            </control>
            <control type="label">
                <top>2</top>
                <left>-20</left>
                <height>64</height>
                <width>auto</width>
                <label>$INFO[ListItem.Premiered]  </label>
                <textcolor>LineLabel</textcolor>
                <font>Font-LineLabel</font>
                <aligny>center</aligny>
                <visible>!IsEmpty(ListItem.Premiered) + Container.Content(episodes)</visible>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
            </control>

            <!-- Rating -->
            <control type="image">
                <left>-12</left>
                <width>64</width>
                <height>64</height>
                <aspectratio>keep</aspectratio>
                <texture colordiffuse="LineLabel" fallback="indicator/fallback.png">indicator/star10.png</texture>
                <visible>!IsEmpty(ListItem.Rating)</visible>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
            </control>
            <control type="label">
                <top>2</top>
                <left>-24</left>
                <height>64</height>
                <width>auto</width>
                <label>$INFO[ListItem.Rating]  </label>
                <textcolor>LineLabel</textcolor>
                <font>Font-LineLabel</font>
                <aligny>center</aligny>
                <visible>!IsEmpty(ListItem.Rating)</visible>
                <visible>Skin.HasSetting(furniture.flags.extradetail)</visible>
            </control>

        </control>
    </include>

    <!-- BACKGROUND -->
    <include name="Furniture_Background">
        <control type="videowindow">
            <visible>Skin.HasSetting(background.showvideo)</visible>
            <visible>Player.HasVideo</visible>
            <visible>!Window.IsVisible(weather)</visible>
            <width>100%</width>
            <height>100%</height>
        </control>
        <control type="multiimage">
            <width>100%</width>
            <height>100%</height>
            <fadetime>600</fadetime>
            <randomize>true</randomize>
            <timeperimage>5000</timeperimage>
            <imagepath background="true">$VAR[Image_Background]</imagepath>
            <aspectratio>scale</aspectratio>
            <animation effect="zoom" start="110" end="120" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(background.animate)">Conditional</animation>
            <animation effect="slide" start="-20,-20" end="20,20" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(background.animate)">Conditional</animation>
            <visible>![Player.HasVideo | Player.HasAudio] | [Player.HasAudio + !Skin.HasSetting(background.showvisualisation)] | [Player.HasVideo + !Skin.HasSetting(background.showvideo)] | Window.IsVisible(weather)</visible>
        </control>

        <control type="group">
            <visible>Skin.HasSetting(background.showvisualisation)</visible>
            <visible>Player.HasAudio</visible>
            <visible>!Window.IsVisible(weather)</visible>
            <width>100%</width>
            <height>100%</height>
            <control type="visualisation">
                <visible>Skin.HasSetting(OSDVisualisation.ShowFanart) | [!Skin.HasSetting(musicvis.fanartfallback) + [!System.HasAddon(script.artistslideshow) | !Skin.HasSetting(ArtistSlideShow.Enabled)]] | [Skin.HasSetting(musicvis.fanartfallback) + [!System.HasAddon(script.artistslideshow) | !Skin.HasSetting(ArtistSlideShow.Enabled)] + IsEmpty(Player.Art(fanart))]</visible>
                <description>visualisation</description>

            </control>
            <control type="image">
                <aspectratio>scale</aspectratio>

                <texture background="true">$INFO[Player.Art(fanart)]</texture>
                <visible>!System.HasAddon(script.artistslideshow) | !Skin.HasSetting(ArtistSlideShow.Enabled)</visible>
                <visible>Skin.HasSetting(musicvis.fanartfallback)</visible>
                <visible>!IsEmpty(Player.Art(fanart))</visible>
                <animation effect="fade" start="100" end="65" time="0" condition="Skin.HasSetting(OSDVisualisation.ShowFanart)">Conditional</animation>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
            </control>
            <control type="multiimage">
                <aspectratio>scale</aspectratio>

                <timeperimage>10000</timeperimage>
                <randomize>true</randomize>
                <fadetime>600</fadetime>
                <loop>yes</loop>
                <imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
                <visible>System.HasAddon(script.artistslideshow) + Skin.HasSetting(ArtistSlideShow.Enabled)</visible>
                <animation effect="fade" start="100" end="65" time="0" condition="Skin.HasSetting(OSDVisualisation.ShowFanart)">Conditional</animation>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
            </control>
        </control>
        <control type="image" description="Fanart Fade">
            <width>100%</width>
            <height>100%</height>
            <texture colordiffuse="FanartFade">common/white.png</texture>
            <visible>!Window.IsVisible(home)</visible>
            <visible>!Window.IsVisible(weather)</visible>
        </control>

        <control type="image" description="Transition Fade">
            <width>100%</width>
            <height>100%</height>
            <texture background="true" colordiffuse="Background">common/white.png</texture>
            <animation effect="fade" start="0" end="100" time="400">WindowClose</animation>
            <animation effect="fade" end="0" start="100" time="400">WindowOpen</animation>
        </control>
        <control type="image" description="Background Overlay">
            <width>100%</width>
            <height>100%</height>
            <fadetime>1000</fadetime>
            <texture colordiffuse="4f777777">$INFO[Skin.String(global.background)]</texture>
            <visible>!IsEmpty(Skin.String(global.background))</visible>
            <animation effect="fade" end="100" start="0" time="250" condition="Window.Previous(home) | Window.Previous(visualisation) | Window.Previous(fullscreenvideo)">WindowOpen</animation>
            <animation effect="fade" end="0" start="100" time="250" condition="Window.Next(home)">WindowClose</animation>
            <visible>!Window.IsVisible(home) + !Window.IsVisible(visualisation)</visible>
        </control>
    </include>

    <!-- TOP BAR -->
    <variable name="Furniture_TopBar_Tile_BGCOLOR">
        <value condition="Skin.HasSetting(header.colormatch)">$VAR[HighlightColor]</value>
        <value condition="VideoPlayer.IsFullscreen + [Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml)]">ObjectBackground</value>
        <value condition="Window.IsVisible(home) | VideoPlayer.IsFullscreen | Window.IsVisible(visualisation) | Window.IsVisible(weather)">HomeBarBG</value>
        <value>ObjectBackground</value>
    </variable>
    <variable name="Furniture_TopBar_MainLabel_Color">
        <value condition="Window.IsVisible(home) | VideoPlayer.IsFullscreen | Window.IsVisible(visualisation) | Window.IsVisible(weather)">HomeMainLabel</value>
        <value>MainLabel</value>
    </variable>
    <variable name="Furniture_TopBar_SubLabel_Color">
        <value condition="Window.IsVisible(home) | VideoPlayer.IsFullscreen | Window.IsVisible(visualisation) | Window.IsVisible(weather)">HomeSubLabel</value>
        <value>SubLabel</value>
    </variable>
    <variable name="Furniture_TopBar_Header_MainLabel">
        <value condition="Window.IsVisible(DialogBusy.xml)">$LOCALIZE[20186]...</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-VideoList.xml)">$LOCALIZE[31145]</value>
        <value condition="Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">$LOCALIZE[31149]</value>
        <value condition="Window.IsVisible(filemanager)">$LOCALIZE[7]</value>
        <value condition="Window.IsVisible(MyWeather.xml)">$LOCALIZE[8]</value>
        <value condition="Window.IsVisible(LoginScreen.xml)">$LOCALIZE[10029]</value>
        <value condition="Window.IsVisible(MyPVRGuide.xml) + Control.IsVisible(10)">$LOCALIZE[19032]</value>
        <value condition="Window.IsVisible(MyPVRGuide.xml) + Control.IsVisible(11)">$LOCALIZE[19030]</value>
        <value condition="Window.IsVisible(MyPVRGuide.xml) + Control.IsVisible(12)">$LOCALIZE[19031]</value>
        <value condition="Window.IsVisible(MyPVRGuide.xml) + Control.IsVisible(13)">$LOCALIZE[19029]</value>
        <value condition="Window.IsVisible(MyPVRTimers.xml)">$LOCALIZE[19040]</value>
        <value condition="Window.IsVisible(MyPVRSearch.xml)">$LOCALIZE[137]</value>
        <value condition="Window.IsVisible(MyPVRRecordings.xml)">$LOCALIZE[19017]</value>
        <value condition="stringcompare(Container.FolderPath,videodb://tvshows/titles/)">$LOCALIZE[20343]</value>
        <value condition="stringcompare(Container.FolderPath,videodb://movies/titles/)">$LOCALIZE[20342]</value>
        <value condition="Container.Content(episodes) + !IsEmpty(ListItem.TvShowTitle) + substring(Container.FolderPath,videodb://tvshows/titles/)">[CAPITALIZE]$INFO[ListItem.TvShowTitle][/CAPITALIZE]</value>
        <value condition="!IsEmpty(Container.FolderName)">[CAPITALIZE]$INFO[Container.FolderName][/CAPITALIZE]</value>
        <value condition="Window.IsVisible(home) + IsEmpty(Skin.String(home.mainheadertext))">$LOCALIZE[31158]</value>
        <value condition="Window.IsVisible(home) + !IsEmpty(Skin.String(home.mainheadertext))">$INFO[Skin.String(home.mainheadertext)]</value>
        <value condition="Window.IsActive(systeminfo) | Window.IsActive(profiles) | Window.IsVisible(SettingsCategory.xml) | Window.IsActive(addonbrowser) | Window.IsVisible(SkinSettings.xml)">$VAR[Label_SettingsHeader]</value>
        <value condition="Window.IsVisible(settings)">$LOCALIZE[5]</value>
        <value condition="Window.IsVisible(EventLog.xml)">$LOCALIZE[14111]</value>
        <value>$LOCALIZE[15100]</value>
    </variable>
    <variable name="Furniture_Counter_Movies">
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Movies.Count),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Movies.Count)][/COLOR] $LOCALIZE[20342]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Movies.UnWatched)][/COLOR] $LOCALIZE[20342]</value>
    </variable>
    <variable name="Furniture_Counter_Episodes">
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Episodes.Count),0) + IntegerGreaterThan(Window(home).Property(Movies.Count),0)">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Episodes.Count)][/COLOR] $LOCALIZE[20360]</value>
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Episodes.Count),0) + !IntegerGreaterThan(Window(home).Property(Movies.Count),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Episodes.Count)][/COLOR] $LOCALIZE[20360]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0) + IntegerGreaterThan(Window(home).Property(Episodes.UnWatched),0)">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Episodes.UnWatched)][/COLOR] $LOCALIZE[20360]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0) + IntegerGreaterThan(Window(home).Property(Episodes.UnWatched),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Episodes.UnWatched)][/COLOR] $LOCALIZE[20360]</value>
    </variable>
    <variable name="Furniture_Counter_Songs">
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) + [IntegerGreaterThan(Window(home).Property(Episodes.Count),0) | IntegerGreaterThan(Window(home).Property(Movies.Count),0)]">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Music.SongsCount)][/COLOR] $LOCALIZE[134]</value>
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) + !IntegerGreaterThan(Window(home).Property(Episodes.Count),0) + !IntegerGreaterThan(Window(home).Property(Movies.Count),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Music.SongsCount)][/COLOR] $LOCALIZE[134]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) + [IntegerGreaterThan(Window(home).Property(Episodes.UnWatched),0) | IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0)]">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Music.SongsCount)][/COLOR] $LOCALIZE[134]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) + !IntegerGreaterThan(Window(home).Property(Episodes.UnWatched),0) + !IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(Music.SongsCount)][/COLOR] $LOCALIZE[134]</value>
    </variable>
    <variable name="Furniture_Counter_Channels">
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Pvr.BackendChannels,0) + [IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) | IntegerGreaterThan(Window(home).Property(Episodes.Count),0) | IntegerGreaterThan(Window(home).Property(Movies.Count),0)]">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Pvr.BackendChannels][/COLOR] $LOCALIZE[19019]</value>
        <value condition="!Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Pvr.BackendChannels,0) + !IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) + !IntegerGreaterThan(Window(home).Property(Episodes.Count),0) + !IntegerGreaterThan(Window(home).Property(Movies.Count),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Pvr.BackendChannels][/COLOR] $LOCALIZE[19019]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Pvr.BackendChannels,0) + [IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) | IntegerGreaterThan(Window(home).Property(Episodes.UnWatched),0) | IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0)]">  •  [COLOR=$VAR[HighlightColor2]]$INFO[Pvr.BackendChannels][/COLOR] $LOCALIZE[19019]</value>
        <value condition="Skin.HasSetting(header.mainheadercount) + IntegerGreaterThan(Pvr.BackendChannels,0) + !IntegerGreaterThan(Window(home).Property(Music.SongsCount),0) + !IntegerGreaterThan(Window(home).Property(Episodes.UnWatched),0) + !IntegerGreaterThan(Window(home).Property(Movies.UnWatched),0)">[COLOR=$VAR[HighlightColor2]]$INFO[Pvr.BackendChannels][/COLOR] $LOCALIZE[19019]</value>
    </variable>
    <variable name="Furniture_TopBar_Header_SubLabel">
        <value condition="Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">[COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(NextAired.Total)][/COLOR] $LOCALIZE[31084]  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window(home).Property(NextAired.TodayTotal)][/COLOR] $LOCALIZE[31085]</value>
        <value condition="Window.IsVisible(LoginScreen.xml)">$LOCALIZE[20115]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-VideoList.xml)">[COLOR=$VAR[HighlightColor2]]$INFO[Window.Property(TotalItems)][/COLOR] $LOCALIZE[31001]  •  [COLOR=$VAR[HighlightColor2]]$INFO[Window.Property(CurrentPage)][/COLOR] $LOCALIZE[20163] [COLOR=$VAR[HighlightColor2]]$INFO[Window.Property(TotalPages)][/COLOR] $LOCALIZE[31067]</value>

        <value condition="!IsEmpty(Container.NumItems) + !IsEmpty(Control.GetLabel(28)) + [Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml)]">[COLOR=$VAR[HighlightColor2]]$INFO[Container.NumItems][/COLOR] $LOCALIZE[31001]  •  [COLOR=$VAR[HighlightColor2]]$INFO[Container.CurrentPage][/COLOR] $LOCALIZE[20163] [COLOR=$VAR[HighlightColor2]]$INFO[Container.NumPages][/COLOR] $LOCALIZE[31067]  •  $INFO[Control.GetLabel(28)]</value>

        <value condition="!IsEmpty(Container.NumItems)">[COLOR=$VAR[HighlightColor2]]$INFO[Container.NumItems][/COLOR] $LOCALIZE[31001]  •  [COLOR=$VAR[HighlightColor2]]$INFO[Container.CurrentPage][/COLOR] $LOCALIZE[20163] [COLOR=$VAR[HighlightColor2]]$INFO[Container.NumPages][/COLOR] $LOCALIZE[31067]</value>
        <value condition="!IsEmpty(Skin.String(home.subheadertext))">$INFO[Skin.String(home.subheadertext)]</value>
        <value condition="Pvr.IsRecording">[COLOR=$VAR[HighlightColor2]]$LOCALIZE[19158][/COLOR][CR]$INFO[Pvr.NextRecordingTitle]$INFO[Pvr.NowRecordingChannel,  ,]</value>
        <value condition="Pvr.HasTimer">[COLOR=$VAR[HighlightColor2]]$LOCALIZE[19157][/COLOR][CR]$INFO[Pvr.NextRecordingTitle]$INFO[Pvr.NextRecordingDateTime,  ,]$INFO[Pvr.NextRecordingChannel,  ,]</value>
        <value>$VAR[Furniture_Counter_Movies]$VAR[Furniture_Counter_Episodes]$VAR[Furniture_Counter_Songs]$VAR[Furniture_Counter_Channels]</value>
    </variable>
    <variable name="Furniture_TopBar_Tile_Text">
        <value condition="Window.IsVisible(DialogBusy.xml)">$LOCALIZE[503]</value>
        <value condition="Player.Muted">$LOCALIZE[31013]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-VideoList.xml) | Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">$LOCALIZE[31070]</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)]">$VAR[Label_PlayerStatus]</value>
        <value condition="Window.IsVisible(FileManager.xml)">$LOCALIZE[744]</value>
        <value condition="Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml)">$LOCALIZE[5]</value>
        <value condition="Window.IsVisible(EventLog.xml) | Window.IsVisible(systeminfo)">$LOCALIZE[5]</value>
        <value condition="Window.IsVisible(weather)">$LOCALIZE[8]</value>
        <value condition="Window.IsVisible(AddonBrowser.xml)">$LOCALIZE[24001]</value>
        <value condition="Window.IsVisible(MyPlaylist.xml)">$LOCALIZE[559]</value>

        <value condition="!Skin.HasSetting(header.tilefollowsnode) + !IsEmpty(Window(home).Property(Header.Label))">$INFO[Window(home).Property(Header.Label)]</value>

        <value condition="Window.IsVisible(MyVideoNav.xml) + [Container.Content(movies) | Container.Content(sets) | substring(Container.FolderPath,/movies/)]">$LOCALIZE[20342]</value>
        <value condition="Window.IsVisible(MyVideoNav.xml) + [Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons) | substring(Container.FolderPath,/tvshows/)]">$LOCALIZE[20343]</value>
        <value condition="Window.IsVisible(MyVideoNav.xml)">$LOCALIZE[3]</value>
        <value condition="Window.IsVisible(MyMusicNav.xml)">$LOCALIZE[2]</value>
        <value condition="Window.IsVisible(MyPics.xml)">$LOCALIZE[1]</value>
        <value condition="Window.IsVisible(MyPrograms.xml)">$LOCALIZE[0]</value>
        <value condition="Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml)">$LOCALIZE[31015]</value>

        <value condition="!IsEmpty(Window(home).Property(Header.Label))">$INFO[Window(home).Property(Header.Label)]</value>

        <value>$LOCALIZE[10000]</value>
    </variable>
    <variable name="Furniture_TopBar_Tile_Icon">
        <value condition="Player.Muted">special://skin/extras/icons/mute.png</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-VideoList.xml) | Window.IsVisible(script-NextAired-TVGuide.xml) | Window.IsVisible(script-NextAired-TVGuide2.xml)">special://skin/extras/icons/infobubble.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasAudio">special://skin/extras/icons/songs.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasVideo + VideoPlayer.Content(movies)">special://skin/extras/icons/film.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasVideo + VideoPlayer.Content(episodes)">special://skin/extras/icons/tv.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasVideo + VideoPlayer.Content(livetv)">special://skin/extras/icons/livetv.png</value>
        <value condition="[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)] + Player.HasVideo">special://skin/extras/icons/video-addons.png</value>
        <value condition="Window.IsVisible(weather)">special://skin/extras/icons/sun.png</value>
        <value condition="Window.IsVisible(SettingsCategory.xml) | Window.IsVisible(settings) | Window.IsVisible(SkinSettings.xml)">special://skin/extras/icons/settings.png</value>
        <value condition="Window.IsVisible(EventLog.xml) | Window.IsVisible(systeminfo)">special://skin/extras/icons/settings.png</value>
        <value condition="Window.IsVisible(AddonBrowser.xml)">special://skin/extras/icons/addons.png</value>
        <value condition="Window.IsVisible(MyPlaylist.xml)">special://skin/extras/icons/playlist.png</value>
        <value condition="Window.IsVisible(FileManager.xml)">special://skin/extras/icons/database.png</value>

        <value condition="!Skin.HasSetting(header.tilefollowsnode) + !IsEmpty(Window(home).Property(Header.Icon)) + substring(Window(home).Property(Header.Icon),special://skin/extras/icons/)">$INFO[Window(home).Property(Header.Icon)]</value>

        <value condition="Window.IsVisible(MyVideoNav.xml) + [Container.Content(movies) | Container.Content(sets) | substring(Container.FolderPath,/movies/)]">special://skin/extras/icons/film.png</value>
        <value condition="Window.IsVisible(MyVideoNav.xml) + [Container.Content(tvshows) | Container.Content(episodes) | Container.Content(seasons) | substring(Container.FolderPath,/tvshows/)]">special://skin/extras/icons/tv.png</value>
        <value condition="Window.IsVisible(MyVideoNav.xml)">special://skin/extras/icons/video-addons.png</value>
        <value condition="Window.IsVisible(MyMusicNav.xml)">special://skin/extras/icons/songs.png</value>
        <value condition="Window.IsVisible(MyPics.xml)">special://skin/extras/icons/pictures.png</value>
        <value condition="Window.IsVisible(MyPrograms.xml)">special://skin/extras/icons/addons.png</value>
        <value condition="Window.IsVisible(MyPVRGuide.xml) | Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRRecordings.xml) | Window.IsVisible(MyPVRSearch.xml) | Window.IsVisible(MyPVRTimers.xml)">special://skin/extras/icons/livetv.png</value>

        <value condition="!IsEmpty(Window(home).Property(Header.Icon)) + substring(Window(home).Property(Header.Icon),special://skin/extras/icons/)">$INFO[Window(home).Property(Header.Icon)]</value>

        <value>special://skin/extras/icons/home.png</value>
    </variable>
    <include name="Furniture_TopBar_Tile">
        <control type="image">
            <posy>18</posy>
            <posx>-88</posx>
            <width>300</width>
            <height>164</height>
            <texture align="left" border="75">common/header.png</texture>
            <colordiffuse>$VAR[Furniture_TopBar_Tile_BGCOLOR]</colordiffuse>
            <animation effect="fade" start="100" end="90" time="200" condition="Skin.HasSetting(home.transparent) + [Window.IsVisible(home) | Window.IsVisible(weather)]">Conditional</animation>
        </control>
    </include>
    <include name="Furniture_TopBar_Tile_Content">

        <control type="image">
            <posy>10</posy>
            <posx>30</posx>
            <width>128</width>
            <height>128</height>
            <texture>$VAR[Furniture_TopBar_Tile_Icon]</texture>
            <aspectratio>keep</aspectratio>
            <colordiffuse>HomeBarFG</colordiffuse>
            <visible>!Container.Scrolling</visible>
            <animation type="Conditional" condition="!Window.IsVisible(DuialogBusy.xml)">
                <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" delay="2000" />
                <effect type="slide" start="0,-10" end="0,0" time="350" tween="sine" easing="out" delay="2000" />
            </animation>
            <animation type="Conditional" condition="Window.IsVisible(DialogBusy.xml)">
                <effect type="fade" start="100" end="0" time="250" tween="sine" easing="out" />
                <effect type="slide" start="0,0" end="0,-10" time="300" tween="sine" easing="out"/>
            </animation>
            <animation type="Visible">
                <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" delay="2000" />
                <effect type="slide" start="0,-10" end="0,0" time="350" tween="sine" easing="out" delay="2000" />
            </animation>
            <animation type="Hidden">
                <effect type="fade" start="100" end="0" time="250" tween="sine" easing="out" />
                <effect type="slide" start="0,0" end="0,-10" time="300" tween="sine" easing="out"/>
            </animation>
        </control>
        <control type="group">
            <visible>Container.Scrolling</visible>
            <animation type="Conditional" condition="!Window.IsVisible(DuialogBusy.xml)">
                <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" delay="2000" />
                <effect type="slide" start="0,-10" end="0,0" time="350" tween="sine" easing="out" delay="2000" />
            </animation>
            <animation type="Conditional" condition="Window.IsVisible(DialogBusy.xml)">
                <effect type="fade" start="100" end="0" time="250" tween="sine" easing="out" />
                <effect type="slide" start="0,0" end="0,-10" time="300" tween="sine" easing="out"/>
            </animation>
            <animation type="Visible">
                <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
                <effect type="slide" start="0,-10" end="0,0" time="350" tween="sine" easing="out" />
            </animation>
            <animation type="Hidden">
                <effect type="fade" start="100" end="0" time="250" tween="sine" easing="out" delay="2000" />
                <effect type="slide" start="0,0" end="0,-10" time="300" tween="sine" easing="out" delay="2000" />
            </animation>
            <control type="label">
                <posy>25</posy>
                <posx>30</posx>
                <width>128</width>
                <height>100</height>
                <aligny>top</aligny>
                <align>center</align>
                <font>Font-Header</font>
                <label>$INFO[ListItem.SortLetter]</label>
                <textcolor>HomeBarFG</textcolor>
            </control>
        </control>
        <control type="label">
            <posx>0</posx>
            <posy>115</posy>
            <width>184</width>
            <aligny>top</aligny>
            <font>Font-Sublabel</font>
            <align>center</align>
            <textcolor>HomeBarFG</textcolor>
            <label>$VAR[Furniture_TopBar_Tile_Text]</label>
        </control>
    </include>
    <include name="Furniture_TopBar_Header">
        <!-- Nothing Playing -->
        <control type="group">
            <visible>![VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)]</visible>
            <visible>!Skin.HasSetting(disable.mainheader)</visible>
            <control type="label">
                <posx>245</posx>
                <posy>25</posy>
                <width>1200</width>
                <height>100</height>
                <font>Font-Header</font>
                <label>$VAR[Furniture_TopBar_Header_MainLabel]</label>
                <aligny>top</aligny>
                <textcolor>$VAR[Furniture_TopBar_MainLabel_Color]</textcolor>
            </control>
            <control type="textbox">
                <posx>245</posx>
                <posy>115</posy>
                <width>1050</width>
                <font>Font-SubLabel</font>
                <aligny>top</aligny>
                <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                <label>$VAR[Furniture_TopBar_Header_SubLabel]</label>
            </control>
        </control>
        <!-- Something Playing -->
        <control type="group">
            <visible>[VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)]</visible>
            <control type="label">
                <posx>245</posx>
                <posy>25</posy>
                <width>1200</width>
                <height>100</height>
                <font>Font-Header</font>
                <label>$INFO[Player.Title]</label>
                <aligny>top</aligny>
                <textcolor>$VAR[Furniture_TopBar_MainLabel_Color]</textcolor>
            </control>
            <control type="grouplist">
                <posx>245</posx>
                <posy>115</posy>
                <width>1050</width>
                <orientation>horizontal</orientation>
                <itemgap>0</itemgap>
                <visible>!IsEmpty(Player.Duration) + Player.HasVideo</visible>
                <control type="label">
                    <width max="400">auto</width>
                    <font>Font-Sublabel</font>
                    <aligny>top</aligny>
                    <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                    <label>[COLOR=$VAR[HighlightColor2]]$VAR[Label_HeaderDirector,,  ][/COLOR]</label>
                    <visible>!VideoPlayer.Content(livetv)</visible>
                </control>
                <control type="label">
                    <width max="730">auto</width>
                    <font>Font-Sublabel</font>
                    <aligny>top</aligny>
                    <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                    <label>[COLOR=$VAR[HighlightColor2]]$INFO[VideoPlayer.ChannelName,,  ][/COLOR]</label>
                    <visible>VideoPlayer.Content(livetv)</visible>
                </control>
                <control type="label">
                    <width>auto</width>
                    <font>Font-Sublabel</font>
                    <align>left</align>
                    <aligny>top</aligny>
                    <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                    <label>$INFO[Player.FinishTime,$LOCALIZE[31071] ,]</label>
                </control>
                <control type="label">
                    <width>330</width>
                    <font>Font-Sublabel</font>
                    <align>right</align>
                    <aligny>top</aligny>
                    <visible>!VideoPlayer.Content(livetv)</visible>
                    <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                    <label>$INFO[Player.Time(hh:mm:ss),  •  ,]$INFO[Player.Duration(hh:mm:ss), / ,]</label>
                </control>
            </control>
            <control type="grouplist">
                <posx>245</posx>
                <posy>115</posy>
                <width>1050</width>
                <orientation>horizontal</orientation>
                <itemgap>0</itemgap>
                <visible>!IsEmpty(Player.Duration) + !Player.HasVideo</visible>
                <control type="label">
                    <width max="830">auto</width>
                    <font>Font-Sublabel</font>
                    <aligny>top</aligny>
                    <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                    <label>[COLOR=$VAR[HighlightColor2]]$INFO[MusicPlayer.Artist][/COLOR]  </label>
                </control>
                <control type="label">
                    <width>320</width>
                    <font>Font-Sublabel</font>
                    <align>left</align>
                    <aligny>top</aligny>
                    <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                    <label>$INFO[Player.Time(hh:mm:ss)]$INFO[Player.Duration(hh:mm:ss), / ,]</label>
                </control>
            </control>
        </control>
    </include>
    <include name="Furniture_TopBar_Clock">
        <control type="group">
            <posx>400r</posx>
            <visible>!Skin.HasSetting(disable.clockheader)</visible>
            <animation effect="slide" start="0" end="92" condition="Skin.HasSetting(disable.weatherheader)">Conditional</animation>
            <control type="image">
                <posx>284</posx>
                <posy>28</posy>
                <width>100</width>
                <height>100</height>
                <fadetime>350</fadetime>
                <aspectratio aligny="center" align="center">keep</aspectratio>
                <texture colordiffuse="$VAR[Furniture_TopBar_MainLabel_Color]">$INFO[Weather.FanartCode,resource://resource.images.weathericons.white/,.png]</texture>
                <visible>!Skin.HasSetting(disable.weatherheader)</visible>
            </control>
            <control type="label">
                <posx>268</posx>
                <posy>115</posy>
                <width>128</width>
                <height>100</height>
                <aligny>top</aligny>
                <font>Font-Sublabel</font>
                <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                <align>center</align>
                <aligny>top</aligny>
                <label>$INFO[Weather.Temperature]</label>
                <visible>!Skin.HasSetting(disable.weatherheader)</visible>
            </control>
            <control type="label">
                <posx>270</posx>
                <posy>25</posy>
                <width>300</width>
                <height>100</height>
                <font>Font-Header</font>
                <align>right</align>
                <aligny>top</aligny>
                <label>$INFO[System.Time(hh:mm)]</label>
                <textcolor>$VAR[Furniture_TopBar_MainLabel_Color]</textcolor>
                <animation effect="slide" start="0" end="-58" condition="!IsEmpty(System.Time(xx))">Conditional</animation>
            </control>
            <control type="label">
                <posx>270</posx>
                <posy>71</posy>
                <width>100</width>
                <height>100</height>
                <aligny>top</aligny>
                <font>Font-Sublabel</font>
                <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                <align>right</align>
                <label>$INFO[System.Time(xx)]</label>
                <visible>!IsEmpty(System.Time(xx))</visible>
            </control>
            <control type="label">
                <posx>270</posx>
                <posy>115</posy>
                <width>500</width>
                <height>100</height>
                <aligny>top</aligny>
                <font>Font-Sublabel</font>
                <textcolor>$VAR[Furniture_TopBar_SubLabel_Color]</textcolor>
                <align>right</align>
                <label>$INFO[System.Date(DDD)]$COMMA $INFO[System.Date(dd MMM yyyy)]</label>
            </control>
        </control>
    </include>
    <include name="Furniture_TopBar">
        <!-- <include>GlobalInfoOverlay</include> -->
        <control type="group">
            <visible>[Window.IsVisible(home) + ![Control.HasFocus(9001) | Control.HasFocus(9101)]] | [Window.IsVisible(DialogSeekBar.xml) + [Player.Seeking | Player.DisplayAfterSeek | Player.Paused | Player.Forwarding | Player.Rewinding | Player.ShowInfo | Window.IsVisible(DialogFullScreenInfo.xml) | Window.IsVisible(musicosd) | Window.IsVisible(videoosd)]] | Window.IsVisible(DialogBusy.xml) | ![Window.IsVisible(home) | Window.IsVisible(DialogSeekBar.xml)] | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml)</visible>
            <animation type="Visible">
                <effect type="slide" start="0,-32" end="0" time="200" tween="quadratic" />
                <effect type="fade" start="0" end="100" time="200" />
            </animation>
            <animation type="Hidden">
                <effect type="fade" end="0" start="100" time="200" />
            </animation>
            <control type="image">
                <width>100%</width>
                <height>512</height>
                <texture colordiffuse="7f000000">common/gradient.png</texture>
                <visible>Window.IsVisible(weather) | Window.IsVisible(home) | VideoPlayer.IsFullscreen | Window.IsVisible(visualisation)</visible>
            </control>
            <control type="group">
                <include>Furniture_TopBar_Header</include>
            </control>
            <include>Furniture_TopBar_Clock</include>
        </control>
        <control type="group">
            <visible>[Window.IsVisible(home) + ![Control.HasFocus(9001) | Control.HasFocus(9101)]] | [Window.IsVisible(DialogSeekBar.xml) + [Player.Seeking | Player.DisplayAfterSeek | Player.Paused | Player.Forwarding | Player.Rewinding | Player.ShowInfo | Window.IsVisible(DialogFullScreenInfo.xml) | Window.IsVisible(musicosd) | Window.IsVisible(videoosd)]] | Window.IsVisible(DialogBusy.xml) | Window.IsActive(DialogVolumeBar.xml) | Player.Muted | ![Window.IsVisible(home) | Window.IsVisible(DialogSeekBar.xml)] | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) | Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml)</visible>
            <animation type="Visible">
                <effect type="slide" start="0,-32" end="0" time="200" tween="quadratic" />
                <effect type="fade" start="0" end="100" time="200" />
            </animation>
            <animation type="Hidden">
                <effect type="fade" end="0" start="100" time="200" />
            </animation>
            <include>Furniture_TopBar_Tile</include>
            <control type="group">
                <visible>!Window.IsVisible(DialogVolumeBar.xml) | Player.Muted</visible>
                <include>Furniture_TopBar_Tile_Content</include>
            </control>
        </control>
    </include>

</includes>